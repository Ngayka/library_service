services:
  web:
    build: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A library_service_api worker -l info"
    volumes:
      - .:/app
    depends_on:
      - web
      - db
      - redis
    env_file:
      - .env
    restart: on-failure

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      celery -A library_service_api beat
      -l info
      --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    depends_on:
      - web
      - db
      - redis
    env_file:
      - .env
    restart: on-failure

  db:
    image: postgres:15-alpine
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine

volumes:
  pgdata:
